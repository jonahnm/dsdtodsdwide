#![feature(never_type)]
use std::any::Any;
use std::borrow::BorrowMut;
use dsf::DsfFile;
use idsp::Dsm;
use intbits::Bits;
use std::env;
use std::ops::{Deref, DerefMut};
use std::path::Path;
use std::sync::Arc;
use bwavfile::{WaveFmt, WaveFmtExtended, WaveWriter};
use dasp_sample::Sample;
use idsp::hbf::{Filter, HbfInt, SymFir};
use idsp::iir::{Action, Biquad, Gain, Order, PidBuilder};
use realfft::num_complex::{Complex, Complex64};
use realfft::RealFftPlanner;
use simple_moving_average::{SumTreeSMA, SMA};
use static_fir::{impl_fir, FirCoefs, FirFilter};
use symphonia_core::conv::dither::{Dither, Rectangular, Triangular};
// this is the recommended filter from https://www.diyaudio.com/community/attachments/dsd-wide-9998-pdf.1155152/
impl_fir!(MAIN,f32,34,[-1.0 ,-2.0 ,-3.0 ,-4.0 ,-2.0, 0., 2., 4., 5., 6. ,7. ,9. ,11. ,13. ,15. ,14. ,14.
,14. ,14. ,15. ,13. ,11. ,9. ,7. ,6. ,5. ,4. ,2. ,0. ,-2. ,-4. ,-3. ,-2. ,-1., ]);

/*
const NTF: [f64;1023] = [
    2.746582131534447e-05,
    -0.028198983777979553,
    -0.1972853645377143,
    -0.1968449787140947,
    -0.02770871090052224,
    0.0001591857589358775,
    4.296576366590579e-05,
    2.8133073734558477e-05,
    2.7464171328968804e-05,
    2.7465142831495907e-05,
    2.7465802861700156e-05,
    2.746582150826929e-05,
    2.7465821340059464e-05,
    2.746582131578724e-05,
    2.7465821315280664e-05,
    2.746582131529158e-05,
    2.746582131529252e-05,
    2.74658213152984e-05,
    2.746582131529482e-05,
    2.7465821315292248e-05,
    2.7465821315294514e-05,
    2.746582131529716e-05,
    2.7465821315296364e-05,
    2.746582131529737e-05,
    2.7465821315297086e-05,
    2.7465821315295432e-05,
    2.746582131529293e-05,
    2.7465821315297096e-05,
    2.7465821315298245e-05,
    2.7465821315296676e-05,
    2.7465821315295432e-05,
    2.746582131529654e-05,
    2.7465821315298407e-05,
    2.7465821315299136e-05,
    2.746582131529755e-05,
    2.7465821315295412e-05,
    2.7465821315295622e-05,
    2.7465821315296215e-05,
    2.7465821315298356e-05,
    2.7465821315299437e-05,
    2.746582131529908e-05,
    2.7465821315299447e-05,
    2.7465821315297452e-05,
    2.7465821315297587e-05,
    2.7465821315299932e-05,
    2.7465821315301274e-05,
    2.7465821315300715e-05,
    2.7465821315300576e-05,
    2.7465821315298895e-05,
    2.7465821315298085e-05,
    2.7465821315299004e-05,
    2.746582131529829e-05,
    2.7465821315297716e-05,
    2.74658213152984e-05,
    2.7465821315298306e-05,
    2.746582131529929e-05,
    2.7465821315298936e-05,
    2.7465821315299088e-05,
    2.7465821315297774e-05,
    2.7465821315299454e-05,
    2.746582131529952e-05,
    2.7465821315300328e-05,
    2.7465821315298868e-05,
    2.746582131529894e-05,
    2.746582131529828e-05,
    2.7465821315298787e-05,
    2.7465821315300698e-05,
    2.7465821315298577e-05,
    2.746582131529954e-05,
    2.7465821315298428e-05,
    2.7465821315297577e-05,
    2.7465821315298617e-05,
    2.7465821315299505e-05,
    2.746582131530101e-05,
    2.7465821315300698e-05,
    2.7465821315304628e-05,
    2.746582131530064e-05,
    2.7465821315299285e-05,
    2.7465821315299078e-05,
    2.7465821315299132e-05,
    2.7465821315299935e-05,
    2.7465821315299742e-05,
    2.746582131529917e-05,
    2.746582131529986e-05,
    2.7465821315299583e-05,
    2.7465821315298817e-05,
    2.7465821315299458e-05,
    2.746582131530058e-05,
    2.746582131530025e-05,
    2.7465821315299437e-05,
    2.746582131529782e-05,
    2.7465821315299613e-05,
    2.7465821315300613e-05,
    2.746582131529965e-05,
    2.7465821315300443e-05,
    2.7465821315300674e-05,
    2.7465821315299613e-05,
    2.7465821315298482e-05,
    2.7465821315297777e-05,
    2.7465821315301182e-05,
    2.7465821315300037e-05,
    2.7465821315300027e-05,
    2.7465821315300484e-05,
    2.7465821315299413e-05,
    2.74658213152985e-05,
    2.7465821315299468e-05,
    2.7465821315300098e-05,
    2.7465821315301623e-05,
    2.7465821315300186e-05,
    2.746582131529976e-05,
    2.7465821315299234e-05,
    2.7465821315300233e-05,
    2.7465821315299363e-05,
    2.7465821315298885e-05,
    2.7465821315300376e-05,
    2.746582131530001e-05,
    2.7465821315299756e-05,
    2.7465821315299505e-05,
    2.746582131529986e-05,
    2.746582131530038e-05,
    2.7465821315301165e-05,
    2.746582131529968e-05,
    2.7465821315299166e-05,
    2.7465821315301263e-05,
    2.746582131529921e-05,
    2.7465821315300074e-05,
    2.746582131530181e-05,
    2.7465821315300233e-05,
    2.7465821315298834e-05,
    2.7465821315299966e-05,
    2.7465821315298306e-05,
    2.7465821315299488e-05,
    2.7465821315301003e-05,
    2.746582131529982e-05,
    2.7465821315300606e-05,
    2.7465821315300914e-05,
    2.7465821315299688e-05,
    2.7465821315299315e-05,
    2.7465821315298245e-05,
    2.7465821315297533e-05,
    2.7465821315301128e-05,
    2.746582131530215e-05,
    2.7465821315301053e-05,
    2.7465821315301358e-05,
    2.746582131530071e-05,
    2.746582131530043e-05,
    2.746582131530182e-05,
    2.7465821315298783e-05,
    2.7465821315300254e-05,
    2.746582131530038e-05,
    2.7465821315298895e-05,
    2.7465821315298207e-05,
    2.7465821315298983e-05,
    2.746582131530019e-05,
    2.7465821315300755e-05,
    2.746582131530121e-05,
    2.7465821315299322e-05,
    2.7465821315299973e-05,
    2.7465821315300454e-05,
    2.7465821315301233e-05,
    2.746582131530056e-05,
    2.7465821315299278e-05,
    2.7465821315298858e-05,
    2.746582131529961e-05,
    2.746582131530015e-05,
    2.7465821315300633e-05,
    2.7465821315301277e-05,
    2.7465821315300372e-05,
    2.7465821315300786e-05,
    2.7465821315301907e-05,
    2.7465821315299393e-05,
    2.7465821315300457e-05,
    2.7465821315300284e-05,
    2.7465821315300735e-05,
    2.74658213153004e-05,
    2.7465821315301328e-05,
    2.7465821315300908e-05,
    2.7465821315298915e-05,
    2.7465821315300596e-05,
    2.7465821315301473e-05,
    2.7465821315300467e-05,
    2.7465821315299146e-05,
    2.746582131529966e-05,
    2.7465821315300454e-05,
    2.7465821315300257e-05,
    2.7465821315299336e-05,
    2.746582131529849e-05,
    2.7465821315299214e-05,
    2.746582131530012e-05,
    2.746582131530068e-05,
    2.7465821315301003e-05,
    2.7465821315301057e-05,
    2.7465821315300894e-05,
    2.746582131530016e-05,
    2.7465821315300728e-05,
    2.7465821315301714e-05,
    2.7465821315300315e-05,
    2.7465821315299878e-05,
    2.746582131530018e-05,
    2.7465821315300074e-05,
    2.7465821315299105e-05,
    2.746582131529804e-05,
    2.7465821315297655e-05,
    2.74658213153014e-05,
    2.7465821315301172e-05,
    2.7465821315299346e-05,
    2.7465821315299386e-05,
    2.7465821315300423e-05,
    2.7465821315300833e-05,
    2.7465821315301833e-05,
    2.7465821315299474e-05,
    2.7465821315299434e-05,
    2.7465821315300054e-05,
    2.746582131529981e-05,
    2.7465821315300986e-05,
    2.7465821315299884e-05,
    2.7465821315300057e-05,
    2.7465821315300884e-05,
    2.7465821315300403e-05,
    2.7465821315300372e-05,
    2.7465821315299983e-05,
    2.7465821315298302e-05,
    2.7465821315298275e-05,
    2.7465821315300606e-05,
    2.7465821315300498e-05,
    2.746582131529926e-05,
    2.746582131529927e-05,
    2.74658213153e-05,
    2.7465821315299535e-05,
    2.7465821315300637e-05,
    2.746582131529994e-05,
    2.7465821315299857e-05,
    2.7465821315300616e-05,
    2.7465821315300484e-05,
    2.7465821315301097e-05,
    2.746582131530139e-05,
    2.74658213153011e-05,
    2.7465821315300017e-05,
    2.7465821315300186e-05,
    2.7465821315300437e-05,
    2.7465821315300667e-05,
    2.746582131530106e-05,
    2.7465821315299424e-05,
    2.746582131529977e-05,
    2.746582131529993e-05,
    2.7465821315299336e-05,
    2.7465821315299505e-05,
    2.7465821315300172e-05,
    2.746582131530014e-05,
    2.746582131529919e-05,
    2.74658213152999e-05,
    2.746582131530189e-05,
    2.7465821315299004e-05,
    2.746582131530025e-05,
    2.7465821315300416e-05,
    2.7465821315300772e-05,
    2.7465821315300386e-05,
    2.7465821315301345e-05,
    2.7465821315303415e-05,
    2.7465821315297625e-05,
    2.7465821315302588e-05,
    2.746582131530105e-05,
    2.746582131530071e-05,
    2.7465821315299403e-05,
    2.7465821315301165e-05,
    2.74658213153017e-05,
    2.7465821315300335e-05,
    2.7465821315300274e-05,
    2.7465821315300833e-05,
    2.7465821315300498e-05,
    2.7465821315301246e-05,
    2.7465821315301582e-05,
    2.7465821315301287e-05,
    2.746582131530068e-05,
    2.7465821315300183e-05,
    2.7465821315301406e-05,
    2.746582131530085e-05,
    2.7465821315301175e-05,
    2.746582131530005e-05,
    2.7465821315299823e-05,
    2.7465821315299857e-05,
    2.7465821315300013e-05,
    2.7465821315301175e-05,
    2.746582131530114e-05,
    2.746582131530045e-05,
    2.746582131530051e-05,
    2.7465821315299617e-05,
    2.7465821315299627e-05,
    2.7465821315301155e-05,
    2.746582131530066e-05,
    2.746582131530095e-05,
    2.7465821315299637e-05,
    2.746582131530026e-05,
    2.746582131530111e-05,
    2.746582131530122e-05,
    2.746582131530031e-05,
    2.7465821315300176e-05,
    2.74658213153004e-05,
    2.7465821315300155e-05,
    2.7465821315299983e-05,
    2.7465821315300606e-05,
    2.7465821315300206e-05,
    2.7465821315300914e-05,
    2.7465821315301263e-05,
    2.746582131530076e-05,
    2.7465821315299678e-05,
    2.746582131529999e-05,
    2.746582131530054e-05,
    2.746582131529906e-05,
    2.7465821315298756e-05,
    2.7465821315298627e-05,
    2.7465821315300145e-05,
    2.7465821315302998e-05,
    2.7465821315302558e-05,
    2.7465821315299732e-05,
    2.7465821315300498e-05,
    2.7465821315300382e-05,
    2.7465821315300027e-05,
    2.7465821315300728e-05,
    2.7465821315301565e-05,
    2.7465821315300647e-05,
    2.7465821315299942e-05,
    2.7465821315300606e-05,
    2.7465821315301494e-05,
    2.7465821315301365e-05,
    2.7465821315300975e-05,
    2.7465821315300877e-05,
    2.7465821315300403e-05,
    2.7465821315300166e-05,
    2.7465821315301057e-05,
    2.7465821315300355e-05,
    2.7465821315300423e-05,
    2.7465821315300057e-05,
    2.746582131529982e-05,
    2.746582131530058e-05,
    2.746582131530127e-05,
    2.746582131530083e-05,
    2.746582131530006e-05,
    2.746582131530139e-05,
    2.74658213153017e-05,
    2.7465821315301548e-05,
    2.7465821315300227e-05,
    2.7465821315300572e-05,
    2.746582131529977e-05,
    2.7465821315299888e-05,
    2.7465821315300233e-05,
    2.746582131530054e-05,
    2.7465821315300084e-05,
    2.7465821315299854e-05,
    2.74658213152996e-05,
    2.746582131529998e-05,
    2.7465821315299962e-05,
    2.7465821315300437e-05,
    2.7465821315301077e-05,
    2.746582131530129e-05,
    2.7465821315301904e-05,
    2.7465821315300318e-05,
    2.7465821315301745e-05,
    2.7465821315301375e-05,
    2.7465821315300176e-05,
    2.7465821315301172e-05,
    2.7465821315300196e-05,
    2.7465821315296398e-05,
    2.7465821315294457e-05,
    2.7465821315297953e-05,
    2.7465821315299454e-05,
    2.7465821315299007e-05,
    2.746582131529967e-05,
    2.7465821315300454e-05,
    2.7465821315300752e-05,
    2.746582131530138e-05,
    2.7465821315300908e-05,
    2.7465821315301348e-05,
    2.7465821315301246e-05,
    2.746582131529978e-05,
    2.74658213152993e-05,
    2.746582131530024e-05,
    2.7465821315300284e-05,
    2.746582131530114e-05,
    2.746582131530064e-05,
    2.7465821315300643e-05,
    2.7465821315302388e-05,
    2.7465821315303987e-05,
    2.746582131530233e-05,
    2.746582131530162e-05,
    2.746582131529994e-05,
    2.7465821315298746e-05,
    2.74658213152981e-05,
    2.7465821315300257e-05,
    2.746582131530014e-05,
    2.746582131530067e-05,
    2.746582131530002e-05,
    2.746582131529955e-05,
    2.7465821315300244e-05,
    2.7465821315301822e-05,
    2.74658213153032e-05,
    2.7465821315300975e-05,
    2.7465821315300247e-05,
    2.74658213153004e-05,
    2.7465821315300786e-05,
    2.746582131530092e-05,
    2.7465821315301307e-05,
    2.746582131530121e-05,
    2.7465821315298407e-05,
    2.7465821315299837e-05,
    2.7465821315300155e-05,
    2.746582131530021e-05,
    2.7465821315299668e-05,
    2.746582131529925e-05,
    2.7465821315299725e-05,
    2.746582131530053e-05,
    2.746582131529992e-05,
    2.7465821315300504e-05,
    2.7465821315301623e-05,
    2.7465821315301263e-05,
    2.7465821315300355e-05,
    2.7465821315300155e-05,
    2.746582131530097e-05,
    2.746582131530011e-05,
    2.7465821315300386e-05,
    2.7465821315301463e-05,
    2.7465821315300223e-05,
    2.746582131530033e-05,
    2.7465821315300745e-05,
    2.7465821315300735e-05,
    2.746582131530086e-05,
    2.7465821315302395e-05,
    2.74658213153018e-05,
    2.7465821315301755e-05,
    2.7465821315301877e-05,
    2.7465821315301043e-05,
    2.7465821315299966e-05,
    2.746582131529932e-05,
    2.7465821315299203e-05,
    2.746582131530094e-05,
    2.7465821315300986e-05,
    2.7465821315299803e-05,
    2.7465821315299837e-05,
    2.746582131530137e-05,
    2.7465821315301636e-05,
    2.7465821315301914e-05,
    2.746582131530228e-05,
    2.7465821315299918e-05,
    2.7465821315299024e-05,
    2.7465821315300105e-05,
    2.746582131530268e-05,
    2.7465821315301955e-05,
    2.7465821315301406e-05,
    2.7465821315300728e-05,
    2.7465821315300925e-05,
    2.746582131529973e-05,
    2.7465821315300247e-05,
    2.746582131530036e-05,
    2.7465821315300725e-05,
    2.746582131529999e-05,
    2.7465821315300433e-05,
    2.746582131529991e-05,
    2.746582131530025e-05,
    2.746582131530072e-05,
    2.7465821315301345e-05,
    2.74658213153002e-05,
    2.746582131530085e-05,
    2.7465821315300078e-05,
    2.746582131530052e-05,
    2.7465821315300796e-05,
    2.7465821315301406e-05,
    2.746582131530164e-05,
    2.7465821315300684e-05,
    2.7465821315298607e-05,
    2.7465821315300477e-05,
    2.7465821315300698e-05,
    2.746582131530042e-05,
    2.746582131529953e-05,
    2.7465821315300098e-05,
    2.7465821315300406e-05,
    2.7465821315299898e-05,
    2.7465821315300772e-05,
    2.7465821315301453e-05,
    2.7465821315300023e-05,
    2.7465821315300972e-05,
    2.746582131530071e-05,
    2.746582131530015e-05,
    2.7465821315299773e-05,
    2.7465821315300403e-05,
    2.7465821315300464e-05,
    2.74658213153003e-05,
    2.746582131529946e-05,
    2.7465821315300352e-05,
    2.746582131530095e-05,
    2.7465821315302195e-05,
    2.74658213153026e-05,
    2.7465821315302043e-05,
    2.7465821315299705e-05,
    2.7465821315299407e-05,
    2.7465821315300786e-05,
    2.7465821315301673e-05,
    2.74658213153022e-05,
    2.7465821315301812e-05,
    2.746582131530228e-05,
    2.74658213153009e-05,
    2.7465821315301e-05,
    2.7465821315300457e-05,
    2.7465821315300853e-05,
    2.7465821315300223e-05,
    2.7465821315300233e-05,
    2.746582131530076e-05,
    2.746582131530029e-05,
    2.7465821315299366e-05,
    2.7465821315299125e-05,
    2.7465821315299454e-05,
    2.7465821315300447e-05,
    2.7465821315299725e-05,
    2.7465821315300254e-05,
    2.746582131530083e-05,
    2.7465821315295917e-05,
    2.746582131529967e-05,
    2.746582131529777e-05,
    2.746582131529953e-05,
    2.7465821315299434e-05,
    2.746582131529936e-05,
    2.7465821315300315e-05,
    2.746582131530244e-05,
    2.7465821315301436e-05,
    2.7465821315300443e-05,
    2.746582131530094e-05,
    2.7465821315300667e-05,
    2.7465821315300606e-05,
    2.746582131530108e-05,
    2.7465821315300765e-05,
    2.746582131530156e-05,
    2.7465821315301284e-05,
    2.7465821315301687e-05,
    2.7465821315301463e-05,
    2.7465821315300037e-05,
    2.7465821315300667e-05,
    2.7465821315301948e-05,
    2.746582131530186e-05,
    2.7465821315300982e-05,
    2.7465821315300806e-05,
    2.746582131529959e-05,
    2.7465821315298417e-05,
    2.7465821315298604e-05,
    2.7465821315300257e-05,
    2.7465821315301057e-05,
    2.7465821315300813e-05,
    2.7465821315301934e-05,
    2.746582131529997e-05,
    2.7465821315299742e-05,
    2.7465821315300877e-05,
    2.746582131530138e-05,
    2.7465821315300315e-05,
    2.7465821315299363e-05,
    2.7465821315299464e-05,
    2.7465821315299603e-05,
    2.7465821315301775e-05,
    2.7465821315300823e-05,
    2.746582131529879e-05,
    2.746582131529975e-05,
    2.7465821315302222e-05,
    2.7465821315302825e-05,
    2.746582131530114e-05,
    2.7465821315300765e-05,
    2.7465821315302368e-05,
    2.7465821315301558e-05,
    2.7465821315299488e-05,
    2.746582131530034e-05,
    2.746582131530075e-05,
    2.746582131529944e-05,
    2.7465821315300277e-05,
    2.7465821315300457e-05,
    2.746582131530084e-05,
    2.7465821315301873e-05,
    2.7465821315301216e-05,
    2.746582131530127e-05,
    2.746582131530053e-05,
    2.7465821315300684e-05,
    2.7465821315301545e-05,
    2.7465821315301016e-05,
    2.746582131529939e-05,
    2.7465821315301094e-05,
    2.7465821315300515e-05,
    2.7465821315300755e-05,
    2.7465821315300853e-05,
    2.7465821315300352e-05,
    2.7465821315300413e-05,
    2.7465821315300657e-05,
    2.7465821315300464e-05,
    2.746582131530078e-05,
    2.7465821315299532e-05,
    2.746582131529925e-05,
    2.746582131530101e-05,
    2.7465821315302066e-05,
    2.746582131530148e-05,
    2.746582131530102e-05,
    2.7465821315301677e-05,
    2.7465821315301016e-05,
    2.7465821315301318e-05,
    2.7465821315301026e-05,
    2.746582131530061e-05,
    2.7465821315300305e-05,
    2.7465821315300467e-05,
    2.7465821315300894e-05,
    2.746582131529929e-05,
    2.7465821315300562e-05,
    2.746582131530043e-05,
    2.7465821315300525e-05,
    2.746582131530056e-05,
    2.7465821315301284e-05,
    2.7465821315302195e-05,
    2.7465821315301206e-05,
    2.7465821315299864e-05,
    2.7465821315298306e-05,
    2.7465821315299383e-05,
    2.746582131530105e-05,
    2.746582131530132e-05,
    2.7465821315300105e-05,
    2.746582131530078e-05,
    2.7465821315300897e-05,
    2.7465821315300023e-05,
    2.7465821315301267e-05,
    2.7465821315300084e-05,
    2.74658213153013e-05,
    2.7465821315301663e-05,
    2.7465821315301497e-05,
    2.7465821315301114e-05,
    2.746582131530143e-05,
    2.7465821315302273e-05,
    2.746582131530084e-05,
    2.7465821315299458e-05,
    2.7465821315301304e-05,
    2.7465821315301907e-05,
    2.746582131530131e-05,
    2.7465821315300623e-05,
    2.7465821315300603e-05,
    2.7465821315300108e-05,
    2.7465821315300386e-05,
    2.746582131530085e-05,
    2.7465821315300667e-05,
    2.7465821315300403e-05,
    2.7465821315299373e-05,
    2.7465821315300254e-05,
    2.746582131529947e-05,
    2.746582131530147e-05,
    2.7465821315302036e-05,
    2.746582131530084e-05,
    2.7465821315301873e-05,
    2.7465821315300857e-05,
    2.7465821315300494e-05,
    2.7465821315301528e-05,
    2.746582131530114e-05,
    2.7465821315299522e-05,
    2.7465821315299014e-05,
    2.74658213152999e-05,
    2.7465821315301358e-05,
    2.7465821315300914e-05,
    2.7465821315300508e-05,
    2.746582131530098e-05,
    2.746582131530145e-05,
    2.7465821315300437e-05,
    2.7465821315300816e-05,
    2.7465821315301927e-05,
    2.746582131530078e-05,
    2.7465821315300657e-05,
    2.7465821315300135e-05,
    2.746582131530167e-05,
    2.7465821315301517e-05,
    2.7465821315299806e-05,
    2.7465821315298292e-05,
    2.7465821315299488e-05,
    2.7465821315300494e-05,
    2.7465821315300986e-05,
    2.7465821315300562e-05,
    2.7465821315299495e-05,
    2.746582131530089e-05,
    2.7465821315301612e-05,
    2.7465821315300925e-05,
    2.7465821315300816e-05,
    2.7465821315301423e-05,
    2.746582131530064e-05,
    2.7465821315300694e-05,
    2.746582131530089e-05,
    2.7465821315301883e-05,
    2.746582131530046e-05,
    2.74658213152997e-05,
    2.7465821315299535e-05,
    2.7465821315299756e-05,
    2.7465821315300508e-05,
    2.7465821315301667e-05,
    2.7465821315301087e-05,
    2.7465821315301934e-05,
    2.7465821315301484e-05,
    2.7465821315301714e-05,
    2.7465821315303225e-05,
    2.74658213153022e-05,
    2.746582131530092e-05,
    2.746582131529964e-05,
    2.7465821315301023e-05,
    2.7465821315300576e-05,
    2.7465821315300884e-05,
    2.746582131530036e-05,
    2.746582131530027e-05,
    2.7465821315299383e-05,
    2.7465821315300406e-05,
    2.7465821315302165e-05,
    2.7465821315300836e-05,
    2.7465821315300135e-05,
    2.7465821315301057e-05,
    2.7465821315298404e-05,
    2.7465821315300586e-05,
    2.7465821315300752e-05,
    2.7465821315301124e-05,
    2.746582131529936e-05,
    2.74658213153001e-05,
    2.7465821315299732e-05,
    2.7465821315298224e-05,
    2.746582131529949e-05,
    2.7465821315300345e-05,
    2.746582131530079e-05,
    2.7465821315300227e-05,
    2.7465821315300152e-05,
    2.7465821315299105e-05,
    2.7465821315299806e-05,
    2.746582131530192e-05,
    2.746582131530288e-05,
    2.7465821315302158e-05,
    2.746582131530005e-05,
    2.7465821315300098e-05,
    2.74658213152992e-05,
    2.7465821315300508e-05,
    2.746582131530082e-05,
    2.746582131530123e-05,
    2.7465821315301412e-05,
    2.746582131530111e-05,
    2.746582131529936e-05,
    2.746582131529915e-05,
    2.7465821315299254e-05,
    2.746582131530038e-05,
    2.7465821315301202e-05,
    2.7465821315300264e-05,
    2.7465821315300023e-05,
    2.7465821315299762e-05,
    2.746582131530048e-05,
    2.746582131529996e-05,
    2.7465821315300047e-05,
    2.7465821315300654e-05,
    2.7465821315300396e-05,
    2.7465821315299607e-05,
    2.7465821315300565e-05,
    2.746582131530041e-05,
    2.7465821315300267e-05,
    2.746582131530062e-05,
    2.746582131530045e-05,
    2.746582131530186e-05,
    2.7465821315301128e-05,
    2.7465821315295375e-05,
    2.7465821315294223e-05,
    2.7465821315298577e-05,
    2.7465821315301955e-05,
    2.746582131529954e-05,
    2.7465821315299468e-05,
    2.7465821315299315e-05,
    2.746582131529896e-05,
    2.746582131529993e-05,
    2.7465821315301436e-05,
    2.7465821315302005e-05,
    2.7465821315301416e-05,
    2.7465821315301175e-05,
    2.7465821315300667e-05,
    2.7465821315301765e-05,
    2.746582131530092e-05,
    2.7465821315302595e-05,
    2.7465821315301236e-05,
    2.746582131530249e-05,
    2.746582131530063e-05,
    2.746582131530091e-05,
    2.7465821315299593e-05,
    2.746582131530079e-05,
    2.7465821315300244e-05,
    2.7465821315299485e-05,
    2.746582131530086e-05,
    2.7465821315299424e-05,
    2.7465821315301135e-05,
    2.7465821315301877e-05,
    2.7465821315299156e-05,
    2.746582131529975e-05,
    2.7465821315300623e-05,
    2.7465821315300115e-05,
    2.7465821315299207e-05,
    2.7465821315299634e-05,
    2.7465821315301213e-05,
    2.746582131530033e-05,
    2.746582131530158e-05,
    2.746582131530234e-05,
    2.7465821315302388e-05,
    2.7465821315302134e-05,
    2.7465821315301023e-05,
    2.7465821315300698e-05,
    2.746582131530123e-05,
    2.7465821315301402e-05,
    2.7465821315301436e-05,
    2.746582131530094e-05,
    2.746582131530227e-05,
    2.7465821315300908e-05,
    2.7465821315302178e-05,
    2.7465821315303076e-05,
    2.7465821315301548e-05,
    2.7465821315299996e-05,
    2.746582131530089e-05,
    2.746582131530143e-05,
    2.7465821315302117e-05,
    2.7465821315301104e-05,
    2.7465821315301494e-05,
    2.7465821315302104e-05,
    2.7465821315301958e-05,
    2.7465821315300897e-05,
    2.7465821315300078e-05,
    2.7465821315300857e-05,
    2.7465821315300884e-05,
    2.7465821315299373e-05,
    2.746582131529907e-05,
    2.7465821315300616e-05,
    2.7465821315300698e-05,
    2.7465821315299678e-05,
    2.7465821315300403e-05,
    2.7465821315301623e-05,
    2.7465821315302012e-05,
    2.7465821315301443e-05,
    2.7465821315300826e-05,
    2.746582131530106e-05,
    2.746582131530053e-05,
    2.7465821315300836e-05,
    2.7465821315299458e-05,
    2.7465821315299708e-05,
    2.7465821315300352e-05,
    2.7465821315301406e-05,
    2.746582131530117e-05,
    2.7465821315299275e-05,
    2.7465821315300698e-05,
    2.7465821315300315e-05,
    2.746582131529917e-05,
    2.746582131529959e-05,
    2.7465821315300633e-05,
    2.7465821315301494e-05,
    2.746582131530166e-05,
    2.7465821315300233e-05,
    2.7465821315300504e-05,
    2.7465821315301318e-05,
    2.746582131530154e-05,
    2.7465821315301555e-05,
    2.7465821315300433e-05,
    2.7465821315300437e-05,
    2.746582131530014e-05,
    2.7465821315300874e-05,
    2.7465821315301172e-05,
    2.746582131530103e-05,
    2.74658213153022e-05,
    2.7465821315301853e-05,
    2.746582131530137e-05,
    2.7465821315301274e-05,
    2.7465821315300867e-05,
    2.7465821315299996e-05,
    2.746582131530061e-05,
    2.746582131530028e-05,
    2.7465821315299996e-05,
    2.7465821315300857e-05,
    2.7465821315301795e-05,
    2.746582131530105e-05,
    2.7465821315301504e-05,
    2.7465821315301182e-05,
    2.7465821315301094e-05,
    2.7465821315301385e-05,
    2.7465821315300938e-05,
    2.746582131530191e-05,
    2.7465821315302934e-05,
    2.7465821315303252e-05,
    2.746582131530274e-05,
    2.746582131530159e-05,
    2.7465821315301162e-05,
    2.7465821315301545e-05,
    2.746582131530127e-05,
    2.7465821315300657e-05,
    2.7465821315301372e-05,
    2.7465821315301246e-05,
    2.7465821315300454e-05,
    2.7465821315301335e-05,
    2.7465821315301758e-05,
    2.7465821315300857e-05,
    2.7465821315301162e-05,
    2.7465821315301307e-05,
    2.7465821315300938e-05,
    2.7465821315300853e-05,
    2.7465821315299844e-05,
    2.7465821315300416e-05,
    2.7465821315301687e-05,
    2.746582131530178e-05,
    2.7465821315302175e-05,
    2.7465821315302043e-05,
    2.7465821315301877e-05,
    2.746582131530054e-05,
    2.7465821315300508e-05,
    2.7465821315299725e-05,
    2.746582131530048e-05,
    2.7465821315301304e-05,
    2.7465821315301338e-05,
    2.7465821315300464e-05,
    2.7465821315298892e-05,
    2.7465821315299197e-05,
    2.7465821315301304e-05,
    2.7465821315300443e-05,
    2.7465821315301626e-05,
    2.746582131530211e-05,
    2.746582131530083e-05,
    2.7465821315299075e-05,
    2.74658213153012e-05,
    2.7465821315301894e-05,
    2.7465821315300593e-05,
    2.746582131530089e-05,
    2.746582131530078e-05,
    2.7465821315300986e-05,
    2.7465821315301853e-05,
    2.746582131530207e-05,
    2.7465821315300752e-05,
    2.7465821315300135e-05,
    2.7465821315299552e-05,
    2.7465821315300067e-05,
    2.746582131529963e-05,
    2.7465821315300735e-05,
    2.7465821315301e-05,
    2.7465821315300078e-05,
    2.7465821315300067e-05,
    2.746582131530071e-05,
    2.746582131530313e-05,
    2.7465821315301592e-05,
    2.7465821315301033e-05,
    2.7465821315300047e-05,
    2.7465821315300298e-05,
    2.746582131529973e-05,
    2.7465821315299647e-05,
    2.7465821315300508e-05,
    2.7465821315300457e-05,
    2.7465821315299847e-05,
    2.7465821315299424e-05,
    2.7465821315299783e-05,
    2.7465821315300792e-05,
    2.7465821315302985e-05,
    2.7465821315302402e-05,
    2.7465821315301985e-05,
    2.7465821315299183e-05,
    2.7465821315299973e-05,
    2.7465821315300027e-05,
    2.7465821315300372e-05,
    2.7465821315300992e-05,
    2.7465821315300857e-05,
    2.746582131530189e-05,
    2.7465821315301565e-05,
    2.7465821315300667e-05,
    2.7465821315300454e-05,
    2.7465821315300193e-05,
    2.7465821315300782e-05,
    2.7465821315299945e-05,
    2.7465821315300427e-05,
    2.746582131530033e-05,
    2.746582131530262e-05,
    2.746582131530208e-05,
    2.7465821315301094e-05,
    2.7465821315300796e-05,
    2.74658213153009e-05,
    2.7465821315300443e-05,
    2.7465821315300366e-05,
    2.7465821315299624e-05,
    2.746582131530066e-05,
    2.7465821315302016e-05,
    2.7465821315301457e-05,
    2.7465821315301494e-05,
    2.746582131530134e-05,
    2.746582131530132e-05,
    2.7465821315301243e-05,
    2.7465821315300603e-05,
    2.746582131530057e-05,
    2.7465821315302104e-05,
    2.7465821315301677e-05,
    2.7465821315301236e-05,
    2.746582131530116e-05,
    2.746582131530127e-05,
    2.7465821315300288e-05,
    2.746582131530081e-05,
    2.746582131530225e-05,
    2.7465821315300843e-05,
    2.7465821315301185e-05,
    2.7465821315301047e-05,
    2.74658213152994e-05,
    2.7465821315299776e-05,
    2.746582131530268e-05,
    2.7465821315303157e-05,
    2.746582131530224e-05,
    2.7465821315300135e-05,
    2.7465821315300664e-05,
    2.7465821315301877e-05,
    2.7465821315300745e-05,
    2.746582131530066e-05,
    2.7465821315301243e-05,
    2.74658213153005e-05,
    2.7465821315300816e-05,
    2.7465821315300938e-05,
    2.746582131530013e-05,
    2.7465821315300017e-05,
    2.746582131530159e-05,
    2.746582131530211e-05,
    2.7465821315300674e-05,
    2.746582131530065e-05,
    2.746582131530072e-05,
    2.7465821315301202e-05,
    2.7465821315301057e-05,
    2.7465821315300775e-05,
    2.7465821315300152e-05,
    2.7465821315299966e-05,
    2.7465821315300704e-05,
    2.746582131530153e-05,
    2.7465821315300125e-05,
    2.7465821315299996e-05,
    2.7465821315299834e-05,
    2.746582131530169e-05,
    2.7465821315301372e-05,
];

 */
fn doubleIntegrate(signal: Vec<f64>) -> Vec<u8> {
    let mut integrator1 = 0.0f64;
    let mut integrator2 = 0.0f64;
    let mut prev_input = 0.0f64;
    let mut prev_integrator1 = 0.0f64;

    let mut out = Vec::<u8>::new();

    for samp in signal {
        let diff1 = samp - prev_input;
        prev_input = samp;

        integrator1 += diff1;

        let diff2 = integrator1 - prev_integrator1;
        prev_integrator1 = integrator1;

        integrator2 += diff2;

        //println!("Integrator2: {:#?}", integrator2);
        out.push((integrator2 + 128.0).clamp(0.0, 255.0).round() as u8);
    }

    out
}

fn main() {
    /*
    let mut impulse = vec![0.0; 100_000];
    impulse[0] = 1.0;

    let output = do_convolve(impulse,COEFFS.to_vec());

    for i in 0..50 {
        println!("output[{}] = {}", i, output[i]);
    }

     */
    let args = env::args().collect::<Vec<String>>();
    let input = &args[1];
    let output = &args[2];
    match DsfFile::open(Path::new(input)) {
        Ok(mut file) => {
            println!("Successfully read dsf file! \n\n{}", file);
       //     let mut interleaved = Vec::<u32>::new();
            let mut prev_percentage = 0u32;
           let mut modulator_left = Dsm::<8>::default();
            let mut modulator_right = Dsm::<8>::default();

            let format = WaveFmt::new_pcm_stereo(file.fmt_chunk().sampling_frequency(),8);
            let mut buffer_size = file.fmt_chunk().sample_count();
            println!("buffer_size = {}", buffer_size);
            let mut current_buffer_left = Vec::<i8>::with_capacity(buffer_size as usize);
            let mut current_buffer_right = Vec::<i8>::with_capacity(buffer_size as usize);
            let mut wav_writer = WaveWriter::create(output, format).unwrap();
          //  wav_writer.is_rf64 = true;
            let mut fw = wav_writer.audio_frame_writer().expect("Failed to create audio frame writer");
            // Factor of 0.2512 is approximate -12 dB of gain.
            println!("Modulating and writing to file!");
            let mut iter = file
                .interleaved_u32_samples_iter()
                .expect("Failed to get samples!");
           // let iter_borrow = Arc::into_inner(iter).unwrap();
          //  let mut shaper_left = FirFilter::<Ntf128>::new();
          //  let mut shaper_right = FirFilter::<Ntf128>::new();
            let mut convolver_left = FirFilter::<MAIN>::new();
            let mut convolver_right = FirFilter::<MAIN>::new();

            let mut absolute_sample_count = 0u128;
            let mut used_sample_count = 0u128;
            while let Some(samplechunk) = iter.next() {
                for bit in 0..32u32 {
                    let sample = samplechunk.bit(bit);
                    let mut expanded_sample = -1;
                    if sample {
                        expanded_sample = 1;
                    }
                    if absolute_sample_count % 2 == 0 {
                        current_buffer_left.push(expanded_sample);
                    } else {
                        current_buffer_right.push(expanded_sample);
                    }
                    absolute_sample_count += 1;
                }
            }
                // let convolved_left = convolver_left.(current_buffer_left.iter().map(|s| *s as f64).collect());
         //   let convolved_right = convolver_right.do_convolve(current_buffer_right.iter().map(|s| *s as f64).collect());
            let all_data = current_buffer_left.iter().zip(current_buffer_right).flat_map(|i| [u8::from_sample(convolver_left.feed(*i.0 as f32) / 128.0), u8::from_sample(convolver_right.feed(i.1 as f32) / 128.0)]).collect::<Vec<u8>>();
            fw.write_frames(all_data.as_slice()).unwrap();
            fw.end().expect("Failed to end audio frame!");

        }
        Err(err) => {
            panic!("Error opening dsf file! {}", err);
        }
    }
}
struct convolver {
    freq_fir: Vec<Complex64>,
    L: usize,
    overlap: Vec<f64>,
}
impl convolver {
    fn new(fir_coeffs: Vec<f64>) -> Self {
        let mut planner = RealFftPlanner::<f64>::new();
        let fft = planner.plan_fft_forward((2*fir_coeffs.len()).next_power_of_two());
        let mut coeffs_padded = fir_coeffs.clone();
        coeffs_padded.resize((2*fir_coeffs.len()).next_power_of_two(),0.0);
        let mut filter_ft = fft.make_output_vec();
        fft.process(&mut coeffs_padded, &mut filter_ft).unwrap();
        convolver {
            freq_fir: filter_ft,
            L: fir_coeffs.len(),
            overlap: vec![0.0; fir_coeffs.len()-1],
        }
    }
    fn do_convolve_with_order(&mut self,samps: Vec<f64>,order: u8) -> Vec<f64> {
        let mut output_buf = samps.clone();
        for _ in 0..order {
                output_buf = self.do_convolve(output_buf);
        }
        output_buf
    }
    fn do_convolve(&mut self,samps: Vec<f64>) -> Vec<f64> {
        let mut planner = RealFftPlanner::<f64>::new();
        let L = self.L;
        let N = (2*L).next_power_of_two();
        let M = N - L + 1;
        let mut samps_to_use = Vec::with_capacity(samps.len() + L - 1);
        samps_to_use.extend_from_slice(&samps);
        samps_to_use.extend(std::iter::repeat(0.0).take(L - 1));
        let fft = planner.plan_fft_forward(N);
        let ifft = planner.plan_fft_inverse(N);
        let mut fftscratch = fft.make_scratch_vec();
        let mut fftbuf = fft.make_output_vec();
        let mut ybuf = ifft.make_output_vec();
        // let mut scratchbuf = Vec::<Complex<f64>>::new();
        let mut xbuf = vec![0.0f64;N];
        let mut output = Vec::<f64>::new();
        let mut current_sample = 0usize;
        while current_sample < samps.len() {
            xbuf[..(L-1)].copy_from_slice(&self.overlap);
            let mut actually_used = 0u64;
            for i in 0..M {
                let idx = L - 1 + i;
                let temp_thing = samps_to_use.get(current_sample + i).cloned();
                if temp_thing == None {
                    break;
                } else {
                    xbuf[idx] = temp_thing.unwrap();
                }
                actually_used += 1;
            }
            current_sample += actually_used as usize;
            if (actually_used as usize) < M {
                println!("Padding!");
                let start_of_padding = L - 1 + actually_used as usize;
                for i in start_of_padding..N {
                    xbuf[i] = 0.0;
                }
            }
            let mut temp_xbuf = xbuf.clone();
            fft.process_with_scratch(&mut temp_xbuf,&mut fftbuf,&mut fftscratch).unwrap();
            // println!("{}",fftbuf.len());
            let mut XIndex = 0usize;
            for X in &mut fftbuf {
                *X /= N as f64;
            }
            for X in &mut fftbuf {
                *X *= self.freq_fir[XIndex];
                XIndex += 1;
            }
            fftbuf[0].im = 0.0;
            let fftbuf_len = fftbuf.len();
            fftbuf[fftbuf_len - 1].im = 0.0;
            ifft.process(&mut fftbuf,&mut ybuf).unwrap();
            output.extend_from_slice(&ybuf[(L - 1)..N]);
            let start = N - (L - 1);
            self.overlap.copy_from_slice(&xbuf[start..N]);
        }
        if output.len() > samps.len() {
            output.truncate(samps.len());
        }
        output
    }
}
